---
import type { GetStaticPaths } from "astro";
import BaseLayout from "../../layouts/BaseLayout.astro";
import BlogPost from "../../components/BlogPost.astro";
import { getCollection } from "astro:content";
import type { CollectionEntry } from "astro:content";

type Props = {
  posts: CollectionEntry<"posts">[];
};

export const prerender = true;

export const getStaticPaths: GetStaticPaths = async () => {
  const allPosts = await getCollection("posts");

  const uniqueTags = [
    ...new Set(allPosts.map((post) => post.data.tags).flat()),
  ];

  return uniqueTags.map((tag) => {
    const filteredPosts = allPosts.filter((post) =>
      post.data.tags.includes(tag)
    );
    return {
      params: { tag },
      props: { posts: filteredPosts },
    };
  });
};

const { tag } = Astro.params;
const { posts } = Astro.props;

if (!tag) {
  throw new Error("No tag provided");
}
---

<BaseLayout pageTitle={tag}>
  <p>Posts tagged with {tag}</p>
  <ul>
    {
      posts.map((post: any) => (
        <BlogPost url={post.slug} title={post.data.title} />
      ))
    }
  </ul>
</BaseLayout>
